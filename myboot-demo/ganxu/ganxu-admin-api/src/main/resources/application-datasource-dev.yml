spring:
  datasource:
    # 1、默认的数据源配置（单数据源）
    #url: jdbc:postgresql://localhost:5432/ganxu?currentSchema=ganxu&useSSL=false&serverTimezone=GMT%2B8&autoReconnect=true
    # 使用p6spy
    url: jdbc:p6spy:postgresql://localhost:5432/ganxu?currentSchema=ganxu&useSSL=false&serverTimezone=GMT%2B8&autoReconnect=true
    username: postgres
    password: 1229
    #driver-class-name: org.postgresql.Driver
    # 使用p6spy 监控
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    # 2、多数据源配置
    #    primary:
    #      url: jdbc:postgresql://localhost:5432/primary?currentSchema=public&useSSL=false&serverTimezone=GMT%2B8&autoReconnect=true
    #      username: postgres
    #      password: 1229
    #      driver-class-name: org.postgresql.Driver
    #    secondary:
    #      url: jdbc:postgresql://localhost:5432/secondary?currentSchema=public&useSSL=false&serverTimezone=GMT%2B8&autoReconnect=true
    #      username: postgres
    #      password: 1229
    #      driver-class-name: org.postgresql.Driver
    # Hikari 连接池配置
    hikari:
      # 最小空闲连接数量
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      #connection-test-query: SELECT 1
  # Spring Data JPA 配置
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL10Dialect
        format_sql: true # SQL格式化
          #hbm2ddl:
        #auto: create
    show-sql: false # SQL输出
    # flyway配置
  flyway:
    baseline-on-migrate: true


#  hibernate.hbm2ddl.auto 参数的作用主要用于：自动创建、更新、验证数据库表结构，有四个值。
#
#     create：每次加载 Hibernate 时都会删除上一次生成的表，然后根据 model 类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#     create-drop：每次加载 Hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭，表就自动删除。
#     update：最常用的属性，第一次加载 Hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），以后加载 Hibernate 时根据 model 类自动更新表结构，即使表结构改变了，但表中的行仍然存在，不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#     validate ：每次加载 Hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
#  其中：
#
#  dialect 主要是指定生成表名的存储引擎
#  show-sql 是否在日志中打印出自动生成的 SQL，方便调试的时候查看